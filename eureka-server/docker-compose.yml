version: "3.8" # 指定 docker-compose.yml 文件的写法格式
services: # 用来表示compose需要启动的服务 本文件从.env文件读取变量

  # 服务间通信，是通过服务名，不是通过容器名
  # 服务间端口，是内部端口，非外部映射端口

  eurekaNodeA: # 服务名
    container_name: eureka_node_a # 容器名
    image: eureka-server:latest
    environment:
      - TZ=Asia/Shanghai
      - EUREKA_HOST=eurekaNodeA
      - EUREKA_ZONE_URL=http://eurekaNodeB:8080/eureka/,http://eurekaNodeC:8080/eureka/
      - spring.profiles.active=cluster
      - SERVER_PORT=8080
      - JAVA_OPTS=-XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m -Xms1024m -Xmx1024m -Xmn256m -Xss256k -XX:SurvivorRatio=8 -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails
    networks:
      - eureka-net
    ports:
      - "8081:8080"

  eurekaNodeB:
    container_name: eureka_node_b
    image: eureka-server:latest
    environment:
      - TZ=Asia/Shanghai
      - EUREKA_HOST=eurekaNodeB
      - EUREKA_ZONE_URL=http://eurekaNodeA:8080/eureka/,http://eurekaNodeC:8080/eureka/
      - spring.profiles.active=cluster
      - SERVER_PORT=8080
      - JAVA_OPTS=-XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m -Xms1024m -Xmx1024m -Xmn256m -Xss256k -XX:SurvivorRatio=8 -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails
    networks:
      - eureka-net
    ports:
      - "8082:8080"

  eurekaNodeC:
    container_name: eureka_node_c
    image: eureka-server:latest
    environment:
      - TZ=Asia/Shanghai
      - EUREKA_HOST=eurekaNodeC
      - EUREKA_ZONE_URL=http://eurekaNodeA:8080/eureka/,http://eurekaNodeB:8080/eureka/
      - spring.profiles.active=cluster
      - SERVER_PORT=8080
      - JAVA_OPTS=-XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m -Xms1024m -Xmx1024m -Xmn256m -Xss256k -XX:SurvivorRatio=8 -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails
    networks:
      - eureka-net
    ports:
      - "8083:8080"

networks:
  eureka-net:
    driver: bridge
    name: eureka-net # 指定最终生成的网络名